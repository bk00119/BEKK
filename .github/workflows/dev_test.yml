name: Demo CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ 'brian/**', 'kevin/**', 'kaitlyn/**', 'ester/**' ]
  pull_request:
    branches: [ 'brian/**', 'kevin/**', 'kaitlyn/**', 'ester/**' ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  env_var: ${{ vars.ENV_CONTEXT_VAR }}
  DEMO_HOME: /home/runner/work/BEKK/BEKK/
  PYTHONPATH: /home/runner/work/BEKK/BEKK/
  CLOUD_MONGO: ${{ vars.CLOUD_MONGO }}
  CLOUD_MONGO_CONN: ${{ vars.CLOUD_MONGO_CONN }}
  CLOUD_MONGO_URL: ${{ vars.CLOUD_MONGO_URL }}
  CLOUD_MONGO_USER: ${{ secrets.CLOUD_MONGO_USER }}
  CLOUD_MONGO_PW: ${{ secrets.CLOUD_MONGO_PW }}
  VENV: ${{ vars.VENV }}
  PA_DOMAIN: ${{ vars.PA_DOMAIN }}
  PA_USER: ${{ vars.PA_USER }}
  PA_PWD: ${{ secrets.PA_PWD }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: pa_deploy

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.9'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install Python packages.
        run: make dev_env

      - name: Run Python tests. (Lint Unit)
        run: make all_tests